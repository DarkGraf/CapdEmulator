
//  Microsoft (R) .NET Framework IL Disassembler.  Version 4.0.30319.33440




// Metadata version: v4.0.30319
.assembly extern mscorlib
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 4:0:0:0
}
.assembly extern CapdxxClient
{
  .ver 1:0:0:0
}
.assembly Capdxx
{
  .custom instance void [mscorlib]System.Runtime.Versioning.TargetFrameworkAttribute::.ctor(string) = ( 01 00 1A 2E 4E 45 54 46 72 61 6D 65 77 6F 72 6B   // ....NETFramework
                                                                                                        2C 56 65 72 73 69 6F 6E 3D 76 34 2E 35 01 00 54   // ,Version=v4.5..T
                                                                                                        0E 14 46 72 61 6D 65 77 6F 72 6B 44 69 73 70 6C   // ..FrameworkDispl
                                                                                                        61 79 4E 61 6D 65 12 2E 4E 45 54 20 46 72 61 6D   // ayName..NET Fram
                                                                                                        65 77 6F 72 6B 20 34 2E 35 )                      // ework 4.5
  .custom instance void [mscorlib]System.Reflection.AssemblyTitleAttribute::.ctor(string) = ( 01 00 06 43 61 70 64 78 78 00 00 )                // ...Capdxx..
  .custom instance void [mscorlib]System.Reflection.AssemblyDescriptionAttribute::.ctor(string) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyConfigurationAttribute::.ctor(string) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyCompanyAttribute::.ctor(string) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyProductAttribute::.ctor(string) = ( 01 00 06 43 61 70 64 78 78 00 00 )                // ...Capdxx..
  .custom instance void [mscorlib]System.Reflection.AssemblyCopyrightAttribute::.ctor(string) = ( 01 00 12 43 6F 70 79 72 69 67 68 74 20 C2 A9 20   // ...Copyright .. 
                                                                                                  20 32 30 31 35 00 00 )                            //  2015..
  .custom instance void [mscorlib]System.Reflection.AssemblyTrademarkAttribute::.ctor(string) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 61 61 36 38 63 61 30 2D 30 39 37 31   // ..$5aa68ca0-0971
                                                                                                  2D 34 34 37 36 2D 39 61 64 33 2D 65 33 37 39 34   // -4476-9ad3-e3794
                                                                                                  34 35 66 61 39 31 33 00 00 )                      // 45fa913..
  .custom instance void [mscorlib]System.Reflection.AssemblyFileVersionAttribute::.ctor(string) = ( 01 00 07 31 2E 30 2E 30 2E 30 00 00 )             // ...1.0.0.0..

  // --- Следующий настраиваемый атрибут добавлен автоматически, не следует отменять преобразование в комментарий -------
  //  .custom instance void [mscorlib]System.Diagnostics.DebuggableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggableAttribute/DebuggingModes) = ( 01 00 07 01 00 00 00 00 ) 

  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor() = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx
                                                                                                             63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.
  .hash algorithm 0x00008004
  .ver 1:0:0:0
}
.module Capdxx.dll
// MVID: {F0B4F1F4-19BD-48E9-9BA5-C0A648EF1D2A}
.imagebase 0x10000000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000002    //  ILONLY
.vtfixup [1] int32 fromunmanaged at VT_01
.vtfixup [1] int32 fromunmanaged at VT_02
.vtfixup [1] int32 fromunmanaged at VT_03
.vtfixup [1] int32 fromunmanaged at VT_04
.vtfixup [1] int32 fromunmanaged at VT_05
.vtfixup [1] int32 fromunmanaged at VT_06
.vtfixup [1] int32 fromunmanaged at VT_07
.vtfixup [1] int32 fromunmanaged at VT_08
.vtfixup [1] int32 fromunmanaged at VT_09
.vtfixup [1] int32 fromunmanaged at VT_10
.vtfixup [1] int32 fromunmanaged at VT_11
.vtfixup [1] int32 fromunmanaged at VT_12
.vtfixup [1] int32 fromunmanaged at VT_13
.vtfixup [1] int32 fromunmanaged at VT_14
.vtfixup [1] int32 fromunmanaged at VT_15
.vtfixup [1] int32 fromunmanaged at VT_16
.data VT_01 = int32(0)
.data VT_02 = int32(0)
.data VT_03 = int32(0)
.data VT_04 = int32(0)
.data VT_05 = int32(0)
.data VT_06 = int32(0)
.data VT_07 = int32(0)
.data VT_08 = int32(0)
.data VT_09 = int32(0)
.data VT_10 = int32(0)
.data VT_11 = int32(0)
.data VT_12 = int32(0)
.data VT_13 = int32(0)
.data VT_14 = int32(0)
.data VT_15 = int32(0)
.data VT_16 = int32(0)
// Image base: 0x002E0000


// =============== CLASS MEMBERS DECLARATION ===================

.class public abstract auto ansi sealed beforefieldinit Capdxx.Export
       extends [mscorlib]System.Object
{
  .method public hidebysig static bool 
          marshal( int8) 
          SearchDevices(native int deviceInfo,
                        int32& size) cil managed
  {
    .vtentry 1 : 1
    .export [1] as SearchDevices
    // Размер кода:       13 (0xd)
    .maxstack  2
    .locals init ([0] bool CS$1$0000)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       bool [CapdxxClient]CapdxxClient.Export::SearchDevices(native int,
                                                                               int32&)
    IL_0008:  stloc.0
    IL_0009:  br.s       IL_000b

    IL_000b:  ldloc.0
    IL_000c:  ret
  } // end of method Export::SearchDevices

  .method public hidebysig static bool 
          marshal( int8) 
          SearchModules(uint32 handle,
                        native int modulesInfo,
                        int32& size) cil managed
  {
    .vtentry 1 : 2
    .export [2] as SearchModules
    // Размер кода:       14 (0xe)
    .maxstack  3
    .locals init ([0] bool CS$1$0000)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  call       bool [CapdxxClient]CapdxxClient.Export::SearchModules(uint32,
                                                                               native int,
                                                                               int32&)
    IL_0009:  stloc.0
    IL_000a:  br.s       IL_000c

    IL_000c:  ldloc.0
    IL_000d:  ret
  } // end of method Export::SearchModules

  .method public hidebysig static bool 
          marshal( int8) 
          OpenDevice(uint32 handle) cil managed
  {
    .vtentry 1 : 3
    .export [3] as OpenDevice
    // Размер кода:       12 (0xc)
    .maxstack  1
    .locals init ([0] bool CS$1$0000)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       bool [CapdxxClient]CapdxxClient.Export::OpenDevice(uint32)
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method Export::OpenDevice

  .method public hidebysig static bool 
          marshal( int8) 
          CloseDevice(uint32 handle) cil managed
  {
    .vtentry 1 : 4
    .export [4] as CloseDevice
    // Размер кода:       12 (0xc)
    .maxstack  1
    .locals init ([0] bool CS$1$0000)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       bool [CapdxxClient]CapdxxClient.Export::CloseDevice(uint32)
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method Export::CloseDevice

  .method public hidebysig static bool 
          marshal( int8) 
          SendCommandSync(uint32 handle,
                          uint8 address,
                          uint8 command,
                          native int param,
                          int32 maxIndex) cil managed
  {
    .vtentry 1 : 5
    .export [5] as SendCommandSync
    // Размер кода:       17 (0x11)
    .maxstack  5
    .locals init ([0] bool CS$1$0000)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  ldarg.3
    IL_0005:  ldarg.s    maxIndex
    IL_0007:  call       bool [CapdxxClient]CapdxxClient.Export::SendCommandSync(uint32,
                                                                                 uint8,
                                                                                 uint8,
                                                                                 native int,
                                                                                 int32)
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method Export::SendCommandSync

  .method public hidebysig static bool 
          marshal( int8) 
          SendCommandAsync(uint32 handle,
                           uint8 address,
                           uint8 command,
                           native int param,
                           int32 maxIndex) cil managed
  {
    .vtentry 1 : 6
    .export [6] as SendCommandAsync
    // Размер кода:       17 (0x11)
    .maxstack  5
    .locals init ([0] bool CS$1$0000)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  ldarg.3
    IL_0005:  ldarg.s    maxIndex
    IL_0007:  call       bool [CapdxxClient]CapdxxClient.Export::SendCommandAsync(uint32,
                                                                                  uint8,
                                                                                  uint8,
                                                                                  native int,
                                                                                  int32)
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method Export::SendCommandAsync

  .method public hidebysig static bool 
          marshal( int8) 
          Burn(uint32 handle,
               int32 controller,
               native int firmware) cil managed
  {
    .vtentry 1 : 7
    .export [7] as Burn
    // Размер кода:       14 (0xe)
    .maxstack  3
    .locals init ([0] bool CS$1$0000)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  call       bool [CapdxxClient]CapdxxClient.Export::Burn(uint32,
                                                                      int32,
                                                                      native int)
    IL_0009:  stloc.0
    IL_000a:  br.s       IL_000c

    IL_000c:  ldloc.0
    IL_000d:  ret
  } // end of method Export::Burn

  .method public hidebysig static bool 
          marshal( int8) 
          StartModule(uint32 handle,
                      uint8 address) cil managed
  {
    .vtentry 1 : 8
    .export [8] as StartModule
    // Размер кода:       13 (0xd)
    .maxstack  2
    .locals init ([0] bool CS$1$0000)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       bool [CapdxxClient]CapdxxClient.Export::StartModule(uint32,
                                                                             uint8)
    IL_0008:  stloc.0
    IL_0009:  br.s       IL_000b

    IL_000b:  ldloc.0
    IL_000c:  ret
  } // end of method Export::StartModule

  .method public hidebysig static bool 
          marshal( int8) 
          StopModule(uint32 handle,
                     uint8 address) cil managed
  {
    .vtentry 1 : 9
    .export [9] as StopModule
    // Размер кода:       13 (0xd)
    .maxstack  2
    .locals init ([0] bool CS$1$0000)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       bool [CapdxxClient]CapdxxClient.Export::StopModule(uint32,
                                                                            uint8)
    IL_0008:  stloc.0
    IL_0009:  br.s       IL_000b

    IL_000b:  ldloc.0
    IL_000c:  ret
  } // end of method Export::StopModule

  .method public hidebysig static bool 
          marshal( int8) 
          SetADCFreq(uint32 handle,
                     int32 address,
                     int32 adcFreq) cil managed
  {
    .vtentry 1 : 10
    .export [10] as SetADCFreq
    // Размер кода:       14 (0xe)
    .maxstack  3
    .locals init ([0] bool CS$1$0000)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  call       bool [CapdxxClient]CapdxxClient.Export::SetADCFreq(uint32,
                                                                            int32,
                                                                            int32)
    IL_0009:  stloc.0
    IL_000a:  br.s       IL_000c

    IL_000c:  ldloc.0
    IL_000d:  ret
  } // end of method Export::SetADCFreq

  .method public hidebysig static bool 
          marshal( int8) 
          SetDACLevel(uint32 handle,
                      uint8 address,
                      uint8 dacLevel) cil managed
  {
    .vtentry 1 : 11
    .export [11] as SetDACLevel
    // Размер кода:       14 (0xe)
    .maxstack  3
    .locals init ([0] bool CS$1$0000)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  call       bool [CapdxxClient]CapdxxClient.Export::SetDACLevel(uint32,
                                                                             uint8,
                                                                             uint8)
    IL_0009:  stloc.0
    IL_000a:  br.s       IL_000c

    IL_000c:  ldloc.0
    IL_000d:  ret
  } // end of method Export::SetDACLevel

  .method public hidebysig static bool 
          marshal( int8) 
          SetZeroDAC(uint32 handle,
                     uint8 address) cil managed
  {
    .vtentry 1 : 12
    .export [12] as SetZeroDAC
    // Размер кода:       13 (0xd)
    .maxstack  2
    .locals init ([0] bool CS$1$0000)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       bool [CapdxxClient]CapdxxClient.Export::SetZeroDAC(uint32,
                                                                            uint8)
    IL_0008:  stloc.0
    IL_0009:  br.s       IL_000b

    IL_000b:  ldloc.0
    IL_000c:  ret
  } // end of method Export::SetZeroDAC

  .method public hidebysig static void  LogMessage(native int text,
                                                   bool newFile) cil managed
  {
    .vtentry 1 : 13
    .export [13] as LogMessage
    // Размер кода:       10 (0xa)
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       void [CapdxxClient]CapdxxClient.Export::LogMessage(native int,
                                                                            bool)
    IL_0008:  nop
    IL_0009:  ret
  } // end of method Export::LogMessage

  .method public hidebysig static bool 
          marshal( int8) 
          ExitDll() cil managed
  {
    .vtentry 1 : 14
    .export [14] as ExitDll
    // Размер кода:       11 (0xb)
    .maxstack  1
    .locals init ([0] bool CS$1$0000)
    IL_0000:  nop
    IL_0001:  call       bool [CapdxxClient]CapdxxClient.Export::ExitDll()
    IL_0006:  stloc.0
    IL_0007:  br.s       IL_0009

    IL_0009:  ldloc.0
    IL_000a:  ret
  } // end of method Export::ExitDll

  .method public hidebysig static bool 
          marshal( int8) 
          GetQuant(uint32 handle,
                   native int& quant) cil managed
  {
    .vtentry 1 : 15
    .export [15] as GetQuant
    // Размер кода:       13 (0xd)
    .maxstack  2
    .locals init ([0] bool CS$1$0000)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       bool [CapdxxClient]CapdxxClient.Export::GetQuant(uint32,
                                                                          native int&)
    IL_0008:  stloc.0
    IL_0009:  br.s       IL_000b

    IL_000b:  ldloc.0
    IL_000c:  ret
  } // end of method Export::GetQuant

  .method public hidebysig static bool 
          marshal( int8) 
          GetModuleParams(uint32 handle,
                          uint8 address,
                          native int buffer,
                          int32& size) cil managed
  {
    .vtentry 1 : 16
    .export [16] as GetModuleParams
    // Размер кода:       15 (0xf)
    .maxstack  4
    .locals init ([0] bool CS$1$0000)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  ldarg.3
    IL_0005:  call       bool [CapdxxClient]CapdxxClient.Export::GetModuleParams(uint32,
                                                                                 uint8,
                                                                                 native int,
                                                                                 int32&)
    IL_000a:  stloc.0
    IL_000b:  br.s       IL_000d

    IL_000d:  ldloc.0
    IL_000e:  ret
  } // end of method Export::GetModuleParams

} // end of class Capdxx.Export


// =============================================================

// *********** ДИЗАССЕМБЛИРОВАНИЕ ЗАВЕРШЕНО ***********************
// ВНИМАНИЕ: создан файл ресурсов Win32 Capdxx.res
